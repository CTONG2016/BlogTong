/**
 * 项目的初始化配置
     * 1. 更改application.properties为application.yml => yml 一种配置格式
     * 2. \\ pro.xml更改thymeleaf version到3.0版本 \\
     *     注意：由于当前的版本已经自动升级超过了3.0，所以直接保持默认即可
     * 3. application.yml 设置spring的模式信息
     * 4. application.yml 链接数据库
     *      启动本机下的 MySQL 5.0 数据库 admin admin (只需要开数据库即可，别的web服务器不打开)
     *      可以切换到 Mysql 5.7 的高版本
     * 5. application.yml 配置日志的信息logging
     *    添加logback-spring.xml文件
     * 6. 配置生产环境pro和开发环境dev
     *      pro 设置端口8081， dev默认端口8080
     * ==> 启动正式运行tomcat：127.0.0.1:8080
 *
 * 异常处理
     * 1. 定义错位的界面  resources/static  & resources/templates
     *   404 : not exist, can not find
     *   500 : server failed
     *   error : for dev error information
     * 2. 全局处理异常
     *   创建类，定于异常的标识，拦截到指定的界面
     *

 * 日志处理
     * 1. 记录日志的内容 (请求url, 访问ip, 调用方法, 请求的参数，return的内容)
     * 2. 记录日志类 LogAspect
 *
 * 页面处理  ===> rebuild project 重新生成项目 !!!!!!!!
     * 1. 前端的静态页面导入project
            html ==> /template ;
            image, js, css ==> /static
     * 2. thymeleaf模板的布局 ==> th:href="@{/css/style.css} && th:src="@{/images/QRcode.jpg}"
     *     定义和使用fragment : 页面的片段化组件component
 *         www.thymeleaf.org 官网手册 (没有启用的方法)
     * 3. 美化错误的页面 error (没有设计的界面)
 *
 * 设计和规范 >> 面向对象的思维模式
 *   实体设计，先建立类与类的关系，使用Spring Boot的JPA "自动生成" 数据库的表结构
 *   - 用户类User
     - 博客类Blog
     - 博客分类Type
     - 博客标签类Tag
     - 博客评论类 Comment : parentComment <-> replyComment
 *
 * 应用分层 >> Service/DAO         ||      MVC : Model + Viewer + Controller
 *   终端显示层 Html ==> 前端页面
 *   请求处理层 Web  ==> 页面的controller控制器
 *   业务逻辑层 Service ==> 处理所有的功能服务
 *   持久层     Dao ==> 数据库操作的层次
 *
 * 后端管理开发
     *   1. 登陆界面login和后台的管理首页面index  https://semantic-ui.com/usage/layout.html
         2. UserService & UserRepository
         3. AdminController
         4. MD5登陆密码的加密
         5. 登陆的拦截器：排除匿名的用户登陆我的界面 Interceptor

       分类管理 + 标签管理 (相同的功能实现)
            /**
             *  pageable  ==> JSON Format
                 *  {
                 *  "content":[
                 *      {"id": 123, "title": "type1", "content": "test1"},
                 *      {"id": 123, "title": "type2", "content": "test1"}
                 *      {"id": 123, "title": "type3", "content": "test1"}
                 *      {"id": 123, "title": "type4", "content": "test1"}
                 *      {"id": 123, "title": "type5", "content": "test1"}
                 *      ......
                 *   ],
                 *  "last": false,
                 *  "totalPages": 9,
                 *  "totalElements": 123,
                 *  "size": 15,
                 *  "number": 0, //页数
                 *  "first": true, //是否是第一页
                 *  "last": false //是否是最后一页
                 *  "sort" :[
                 *         {
                 *           "direction": "DESC",
                 *           "property": "id",
                 *           "ignoreCase": false,
                 *           "ascending": false
                 *         }
                 *      ],
                 *   "numberOfElements": 15
                 *  }
             *
             */

       博客管理
          1. 博客的分页查询
          2. 新增博客
          3. 修改与删除

       将Markdown下面编辑的东西转化成HTML的格式添加到界面中
            https://github.com/atlassian/commonmark-java
       pom.xml 引用 commonmark

       博客的评论功能实现：
          1. 博客评论信息的提交和回复功能
          2. 评论信息的列表展示功能
          3. 管理员回复的功能 (博主管理员的特殊评论回复功能)

       *** 注意清除网页浏览器的缓存数据，以免影响测试的效果 ***

       设置配置的文件/resources/messages.properties, 语言的国际化，管理语言 :  https://www.jb51.net/article/138815.htm
       th:text="#{admin.email}"

       更改messages.properties之后 ==> 配置路径spring.messages.basename : /dir/messages

 *
 */
